/**
 * 🤖 완전 자율 프로젝트 관리자
 * 사람 개입 없이 체크→완성→테스트→검수→수정→테스트→검증→수정 무한 반복
 * 관리자 입장에서 품질 기준 달성까지 자동 관리
 */

class AutonomousProjectManager {
    constructor() {
        this.managementPhases = {
            'planning': { weight: 0.15, criteria: ['완전성', '실현가능성', '혁신성'] },
            'development': { weight: 0.25, criteria: ['코드품질', '기능완성도', '확장성'] },
            'design': { weight: 0.20, criteria: ['사용성', '미적완성도', '직관성'] },
            'testing': { weight: 0.20, criteria: ['버그없음', '성능최적화', '안정성'] },
            'validation': { weight: 0.20, criteria: ['사용자만족', '시장성', '차별성'] }
        };
        
        this.qualityStandards = {
            minimum: 70, // 최소 품질 기준
            target: 85,  // 목표 품질 기준  
            excellent: 95 // 최고 품질 기준
        };
        
        this.autonomousRules = {
            maxIterations: 50, // 최대 반복 횟수
            qualityCheckInterval: 3, // 3라운드마다 품질 점검
            autoFixThreshold: 75, // 이 점수 이하면 자동 수정
            escalationThreshold: 60, // 이 점수 이하면 전면 재검토
        };
    }

    // 🎯 완전 자율 관리 시작 프롬프트
    generateAutonomousManagerPrompt(projectObjective) {
        return `
=== 🤖 완전 자율 프로젝트 관리자 모드 활성화 ===

🎯 프로젝트: "${projectObjective}"
🏢 역할: AI 프로젝트 관리자 (PMO)

## 📋 자율 관리 권한 및 책임
✅ **완전 자율 권한 부여됨** - 사람 개입 없이 프로젝트 완성까지 전담
✅ **품질 관리 책임** - 모든 결과물이 상용 수준에 도달할 때까지 관리
✅ **무한 반복 권한** - 만족스러운 품질 달성까지 계속 수정 지시
✅ **AI팀 지휘 권한** - ChatGPT, Gemini, Perplexity 완전 통제

## 🎼 관리해야 할 AI 팀
- **ChatGPT**: 개발팀장 (구현, 코딩, 기술적 솔루션)
- **Google AI Studio**: 디자인팀장 (UI/UX, 창의적 아이디어, 사용자 경험)  
- **Perplexity**: 검증팀장 (시장조사, 트렌드 분석, 품질 검증)

## 📊 품질 관리 기준 (관리자 관점)
### 🥉 최소 기준 (70점): 기본 기능 작동
### 🥈 목표 기준 (85점): 상용화 가능 수준
### 🥇 최고 기준 (95점): 시장 리더급 품질

## 🔄 자율 관리 프로세스
1. **기획 검토** → AI팀에게 계획 수립 지시
2. **개발 관리** → 구현 품질 지속 점검 및 개선 지시
3. **디자인 관리** → 사용자 경험 최적화 반복 지시
4. **테스트 관리** → 버그 및 성능 이슈 자동 식별/수정 지시
5. **검증 관리** → 시장 경쟁력 및 사용자 만족도 검증
6. **품질 미달 시** → 해당 팀에게 재작업 지시 (무한 반복)

## 🎯 1차 관리 지시사항

### Phase 1: 프로젝트 기획 완성
당신이 관리자로서 이 프로젝트를 성공시키기 위한 완벽한 기획을 수립하세요.

**관리자 기획 요구사항:**
1. **사업적 관점**: 시장성, 수익성, 차별화 전략
2. **기술적 관점**: 구현 가능성, 확장성, 유지보수성
3. **사용자 관점**: 편의성, 직관성, 만족도
4. **품질 관점**: 안정성, 보안성, 성능

**AI팀 관리 계획:**
- ChatGPT 팀장에게 지시할 구체적 개발 요구사항
- Gemini 팀장에게 지시할 디자인 완성도 기준
- Perplexity 팀장에게 지시할 검증 및 개선 방향

## 📋 관리자 응답 형식

### 🎯 프로젝트 관리자 분석
- **사업적 가치**: 
- **기술적 난이도**: 
- **예상 개발 기간**: ___라운드
- **품질 달성 전략**: 

### 👥 AI팀 관리 계획

#### 📱 ChatGPT 개발팀 지시사항
**목표**: 완벽한 기술적 구현
**구체적 지시**: "[ChatGPT에게 전달할 상세하고 구체적인 개발 지시사항]"
**품질 기준**: 코드 품질 85점 이상, 버그 제로
**완료 신호**: "DEV-COMPLETE: [완성 내용 요약]"

#### 🎨 Gemini 디자인팀 지시사항  
**목표**: 최고 수준의 사용자 경험
**구체적 지시**: "[Gemini에게 전달할 상세하고 구체적인 디자인 지시사항]"
**품질 기준**: 사용성 85점 이상, 직관적 인터페이스
**완료 신호**: "DESIGN-COMPLETE: [완성 내용 요약]"

#### 📊 Perplexity 검증팀 지시사항
**목표**: 철저한 검증 및 개선안 도출
**구체적 지시**: "[Perplexity에게 전달할 상세하고 구체적인 검증 지시사항]"  
**품질 기준**: 검증 신뢰도 90점 이상
**완료 신호**: "VALIDATION-COMPLETE: [검증 결과 요약]"

### 🔄 자율 관리 프로토콜
- **품질 점검 주기**: 매 ___라운드
- **재작업 기준**: 품질 점수 ___점 미만
- **완성 기준**: 모든 영역 ___점 이상
- **비상 계획**: [품질 기준 미달 시 대응 방안]

## ⚠️ 관리자 권한 행사
✅ 품질 미달 시 무조건 재작업 지시
✅ AI팀 결과물에 대한 무한 수정 요구 권한
✅ 프로젝트 완성까지 무한 반복 관리 권한
✅ 최종 품질 승인권

**이제 프로젝트 관리자로서 이 팀을 이끌어 완벽한 결과물을 만들어내세요!**
사람의 추가 지시 없이 품질 기준 달성까지 완전 자율로 관리하세요!
        `;
    }

    // 🔍 품질 점검 및 다음 단계 지시 프롬프트  
    generateQualityCheckPrompt(roundResults, currentRound) {
        return `
=== 🤖 관리자 품질 점검 및 다음 지시 ===
라운드: ${currentRound}

## 📊 팀별 결과물 검토

### 💻 ChatGPT 개발팀 결과:
${roundResults.chatgpt || '미완료'}

### 🎨 Gemini 디자인팀 결과:  
${roundResults.gemini || '미완료'}

### 📊 Perplexity 검증팀 결과:
${roundResults.perplexity || '미완료'}

## 🎯 관리자 임무
1. **각 팀 결과물 품질 평가** (0-100점)
2. **부족한 부분 구체적 지적**
3. **다음 라운드 개선 지시사항 작성**
4. **프로젝트 전체 진행률 평가**

## 📋 관리자 평가 및 지시 형식

### 🔍 품질 평가 점수
- **ChatGPT 개발**: ___/100점 (기준: 85점)
- **Gemini 디자인**: ___/100점 (기준: 85점)  
- **Perplexity 검증**: ___/100점 (기준: 85점)
- **전체 통합도**: ___/100점

### 🎯 다음 라운드 관리 지시

#### 📱 ChatGPT 팀 개선 지시
**현재 문제점**: 
**개선 요구사항**: 
**구체적 지시**: "[ChatGPT에게 전달할 개선 지시사항]"
**완성 기준**: 

#### 🎨 Gemini 팀 개선 지시
**현재 문제점**:
**개선 요구사항**: 
**구체적 지시**: "[Gemini에게 전달할 개선 지시사항]"
**완성 기준**:

#### 📊 Perplexity 팀 개선 지시  
**현재 문제점**:
**개선 요구사항**:
**구체적 지시**: "[Perplexity에게 전달할 개선 지시사항]"
**완성 기준**:

### 📊 관리자 의사결정

#### 🔄 프로젝트 상태 판단
- [ ] **계속 진행**: 품질 개선 중, 다음 라운드 진행
- [ ] **집중 개선**: 특정 영역 집중 보완 필요  
- [ ] **전면 재검토**: 기본 방향부터 재설정 필요
- [ ] **완성 준비**: 최종 검수 및 마무리 단계
- [ ] **프로젝트 완성**: 모든 기준 충족, 완성 선언

#### 🎯 관리자 최종 지시
- **다음 우선순위**: 
- **예상 완성 라운드**: 
- **특별 관리 사항**: 

**계속해서 품질 기준 달성까지 팀을 관리하세요!**
        `;
    }

    // 🏁 프로젝트 완성 선언 프롬프트
    generateProjectCompletionPrompt(finalResults) {
        return `
=== 🏆 프로젝트 완성 관리자 최종 검수 ===

## 📊 최종 결과물 검수

### 💻 ChatGPT 개발팀 최종 결과:
${finalResults.chatgpt}

### 🎨 Gemini 디자인팀 최종 결과:
${finalResults.gemini}

### 📊 Perplexity 검증팀 최종 결과:  
${finalResults.perplexity}

## 🎯 관리자 최종 검수 임무
1. **전체 결과물 통합 평가**
2. **상용화 준비도 검증**  
3. **사용자 관점 최종 점검**
4. **프로젝트 완성 선언 또는 추가 개선 지시**

## 📋 최종 검수 양식

### 🔍 최종 품질 평가
- **기능 완성도**: ___/100점
- **사용자 경험**: ___/100점  
- **기술적 완성도**: ___/100점
- **시장 경쟁력**: ___/100점
- **종합 평가**: ___/100점

### 🏆 프로젝트 완성 판정
- [ ] **🎉 프로젝트 완성**: 모든 기준 충족, 상용화 준비 완료
- [ ] **⚠️ 조건부 완성**: 소규모 개선 후 완성 가능
- [ ] **🔄 추가 개선 필요**: 주요 개선사항 보완 후 재검수

### 📋 최종 결과물 정리
**프로젝트명**: 
**핵심 기능**: 
**차별화 요소**: 
**예상 사용자**: 
**사업화 방안**: 

### 👥 팀 성과 평가  
**ChatGPT 개발팀**: ___점 - [성과 평가]
**Gemini 디자인팀**: ___점 - [성과 평가]  
**Perplexity 검증팀**: ___점 - [성과 평가]

### 🎯 관리자 최종 의견
**프로젝트 성공 요인**: 
**개선된 협업 방식**: 
**향후 유사 프로젝트 권장사항**: 

## 🏁 프로젝트 완성 선언
[완성 시] "🎉 PROJECT-COMPLETED: 모든 품질 기준 충족, 프로젝트 완성!"
[추가 작업 시] "🔄 CONTINUE-IMPROVEMENT: [구체적 개선 지시사항]"
        `;
    }
}

// 전역 관리자 인스턴스 
window.autonomousManager = new AutonomousProjectManager();

console.log(`
🤖 완전 자율 프로젝트 관리자 준비 완료!

🎯 특징:
✅ 사람 개입 없이 완성까지 자율 관리
✅ 체크→테스트→검수→수정→검증 무한 반복  
✅ AI팀 완전 통제 및 품질 관리
✅ 상용 수준 품질 기준 적용

🚀 자율 관리 시작:
const managerPrompt = autonomousManager.generateAutonomousManagerPrompt("사용자 맞춤형 운동 계획 AI 앱");
console.log(managerPrompt);
`);